{"version":3,"sources":["components/todos/TodoForm.module.css","components/layout/MainNavigation.module.css","components/descriptions/NewDescriptionForm.module.css","components/todos/TodoList.module.css","components/UI/LoadingSpinner.module.css","components/todos/TodoItem.module.css","components/todos/NoTodosFound.module.css","components/todos/HighlightedTodo.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/descriptions/Descriptions.module.css","components/descriptions/DescriptionItem.module.css","components/descriptions/DescriptionsList.module.css","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/todos/TodoItem.js","components/todos/TodoList.js","components/todos/NoTodosFound.js","pages/AllTodos.js","components/todos/HighlightedTodo.js","pages/TodoDetail.js","components/UI/Card.js","components/todos/TodoForm.js","pages/NewTodo.js","pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/descriptions/NewDescriptionForm.js","components/descriptions/DescriptionItem.js","components/descriptions/DescriptionsList.js","components/descriptions/Descriptions.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllTodos","fetch","response","json","ok","Error","key","transformedTodos","todoObj","id","push","getSingleTodo","todoId","loadedTodo","addTodo","todoData","method","body","JSON","stringify","headers","addDescription","descriptionData","descriptionId","name","getAllDescriptions","transformedDescriptions","descriptionObj","TodoItem","props","item","text","author","to","TodoList","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","console","log","todos","ascending","sortedTodos","sort","todoA","todoB","sorting","onClick","pathname","list","map","todo","NoTodosFound","notodos","AllTodos","loadedTodos","useEffect","length","HighlightedTodo","TodoDetail","useParams","Card","card","children","TodoForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddTodo","isLoading","loading","control","htmlFor","ref","rows","actions","NewTodo","NotFound","MainNavigation","header","logo","nav","navData","isActive","active","Layout","main","NewDescriptionForm","descriptionTextRef","onAddedDescription","submitFormHandler","DescriptionItem","DescriptionsList","descriptions","description","Descriptions","useState","isAddingDescription","setIsAddingDescription","loadedDescriptions","addedDescriptionHandler","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dcd440b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TodoForm_form__2VFi0\",\"loading\":\"TodoForm_loading__KPGOz\",\"control\":\"TodoForm_control__1KSvb\",\"actions\":\"TodoForm_actions__RJP-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__bSRdg\",\"logo\":\"MainNavigation_logo__J87uU\",\"nav\":\"MainNavigation_nav__wx1vO\",\"active\":\"MainNavigation_active__3xice\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewDescriptionForm_form__MsPhl\",\"loading\":\"NewDescriptionForm_loading__pqByc\",\"control\":\"NewDescriptionForm_control__2mtg8\",\"actions\":\"NewDescriptionForm_actions__lca_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoList_list__38SRs\",\"sorting\":\"TodoList_sorting__W_nQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__7hhft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2ua7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notodos\":\"NoTodosFound_notodos__2wWhi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"HighlightedTodo_todo__2GCbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__11mO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2iiu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptions\":\"Descriptions_descriptions__WdVvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DescriptionItem_item__Y9xUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptions\":\"DescriptionsList_descriptions__3TPiR\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-d1e1f-default-rtdb.firebaseio.com';\n\nexport async function getAllTodos() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/todo.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch toodos.');\n  }\n\n  const transformedTodos = [];\n\n  for (const key in data) {\n    const todoObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedTodos.push(todoObj);\n  }\n\n  return transformedTodos;\n}\n\nexport async function getSingleTodo(todoId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/todo/${todoId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch todo.');\n  }\n\n  const loadedTodo = {\n    id: todoId,\n    ...data,\n  };\n\n  return loadedTodo;\n}\n\nexport async function addTodo(todoData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/todo.json`, {\n    method: 'POST',\n    body: JSON.stringify(todoData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create todo.');\n  }\n\n  return null;\n}\n\nexport async function addDescription(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/description/${requestData.todoId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.descriptionData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add description.');\n  }\n\n  return { descriptionId: data.name };\n}\n\nexport async function getAllDescriptions(todoId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/description/${todoId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get descriptions.');\n  }\n\n  const transformedDescriptions = [];\n\n  for (const key in data) {\n    const descriptionObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedDescriptions.push(descriptionObj);\n  }\n\n  return transformedDescriptions;\n}\n\n\n","import { Link } from 'react-router-dom';\n\nimport classes from './TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blocktodo>\n          <p>{props.text}</p>\n        </blocktodo>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/todo/${props.id}`}>\n        Pełny ekran\n      </Link>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import { Fragment } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport TodoItem from './TodoItem';\nimport classes from './TodoList.module.css';\n\nconst sortTodos = (todos, ascending) => {\n  return todos.sort((todoA, todoB) => {\n    if (ascending) {\n      return todoA.id > todoB.id ? 1 : -1;\n    } else {\n      return todoA.id < todoB.id ? 1 : -1;\n    }\n  });\n};\n\nconst TodoList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  console.log(isSortingAscending)\n\n  const sortedTodos = sortTodos(props.todos, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    navigate(location.pathname, {\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n      });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sortuj {isSortingAscending ? 'malejąco' : 'rosnąco'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedTodos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            id={todo.id}\n            author={todo.author}\n            text={todo.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default TodoList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoTodosFound.module.css';\n\nconst NoTodosFound = () => {\n  return (\n    <div className={classes.notodos}>\n      <p>Nie znaleziono żadnego todo</p>\n      <Link className='btn' to='/new-todo'>\n        Dodaj todo\n      </Link>\n    </div>\n  );\n};\n\nexport default NoTodosFound;\n","import { useEffect } from 'react';\n\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getAllTodos } from '../lib/api';\nimport TodoList from '../components/todos/TodoList';\nimport NoTodosFound from '../components/todos/NoTodosFound';\n\nconst AllTodos = () => {\n  const { sendRequest, status, data: loadedTodos, error } = useHttp(\n    getAllTodos,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>;\n  }\n\n  if (status === 'completed' && (!loadedTodos || loadedTodos.length === 0)) {\n    return <NoTodosFound />;\n  }\n\n  return <TodoList todos={loadedTodos} />;\n};\n\nexport default AllTodos;\n","import classes from './HighlightedTodo.module.css';\n\nconst HighlightedTodo = (props) => {\n  return (\n    <figure className={classes.todo}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedTodo;\n","import { Fragment, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\n\nimport HighlightedTodo from '../components/todos/HighlightedTodo';\nimport useHttp from '../hooks/use-http';\nimport { getSingleTodo } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst TodoDetail = () => {\n  const params = useParams();\n\n  const { todoId } = params;\n\n  const { sendRequest, status, data: loadedTodo, error } = useHttp(\n    getSingleTodo,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(todoId);\n  }, [sendRequest, todoId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedTodo.text) {\n    return <p>Nie znaleziono, żadnego todo!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedTodo text={loadedTodo.text} author={loadedTodo.author} />\n      <Outlet />\n    </Fragment>\n  );\n};\n\nexport default TodoDetail;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef } from 'react';\n// import { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './TodoForm.module.css';\n\nconst TodoForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    props.onAddTodo({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Autor</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>To do: </label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn'>Dodaj todo</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default TodoForm;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport TodoForm from '../components/todos/TodoForm';\nimport useHttp from '../hooks/use-http';\nimport { addTodo } from '../lib/api';\n\nconst NewTodo = () => {\n  const { sendRequest, status } = useHttp(addTodo);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      navigate('/todo');\n    }\n  }, [status, navigate]);\n\n  const addTodoHandler = (todoData) => {\n    sendRequest(todoData);\n  };\n\n  return <TodoForm isLoading={status === 'pending'} onAddTodo={addTodoHandler} />;\n};\n\nexport default NewTodo;\n","const NotFound = () => {\n  return (\n    <div className='centered'>\n      <p>Nie znaleziono strony!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { NavLink } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Todos</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to='/todo' className={navData => navData.isActive ? classes.active : '' }>\n              Wszystkie todo\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/new-todo' className={navData => navData.isActive ? classes.active : '' }>\n              Dodaj todo\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addDescription } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewDescriptionForm.module.css';\n\nconst NewDescriptionForm = (props) => {\n  const descriptionTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addDescription);\n\n  const { onAddedDescription } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedDescription();\n    }\n  }, [status, error, onAddedDescription]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = descriptionTextRef.current.value;\n\n    sendRequest({ descriptionData: { text: enteredText }, todoId: props.todoId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='description'>Twój opis</label>\n        <textarea id='description' rows='5' ref={descriptionTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Dodaj opis</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewDescriptionForm;\n","import classes from './DescriptionItem.module.css';\n\nconst DescriptionItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default DescriptionItem;\n","import DescriptionItem from './DescriptionItem';\nimport classes from './DescriptionsList.module.css';\n\nconst DescriptionsList = (props) => {\n  return (\n    <ul className={classes.descriptions}>\n      {props.descriptions.map((description) => (\n        <DescriptionItem key={description.id} text={description.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default DescriptionsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Descriptions.module.css';\nimport NewDescriptionForm from './NewDescriptionForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllDescriptions } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport DescriptionsList from './DescriptionsList';\n\nconst Descriptions = () => {\n  const [isAddingDescription, setIsAddingDescription] = useState(false);\n  const params = useParams();\n\n  const { todoId } = params;\n\n  const { sendRequest, status, data: loadedDescriptions } = useHttp(getAllDescriptions);\n\n  useEffect(() => {\n    sendRequest(todoId);\n  }, [todoId, sendRequest]);\n\n  const startAddDescriptionHandler = () => {\n    setIsAddingDescription(true);\n  };\n\n  const addedDescriptionHandler = useCallback(() => {\n    sendRequest(todoId);\n  }, [sendRequest, todoId]);\n\n  let description;\n\n  if (status === 'pending') {\n    description = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedDescriptions && loadedDescriptions.length > 0) {\n    description = <DescriptionsList descriptions={loadedDescriptions} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedDescriptions || loadedDescriptions.length === 0)\n  ) {\n    description = <p className='centered'>Nie dodano do tej pory żadnego opisu!</p>;\n  }\n\n  return (\n    <section className={classes.descriptions}>\n      <h2>Opis todo</h2>\n      {!isAddingDescription && (\n        <button className='btn' onClick={startAddDescriptionHandler}>\n          Dodaj opis\n        </button>\n      )}\n      {isAddingDescription && (\n        <NewDescriptionForm\n        todoId={todoId}\n        onAddedDescription={addedDescriptionHandler}\n        />\n      )}\n      {description}\n    </section>\n  );\n};\n\nexport default Descriptions;\n","import { Route, Routes, Navigate, Link } from 'react-router-dom';\n\nimport AllTodos from './pages/AllTodos';\nimport TodoDetail from './pages/TodoDetail';\nimport NewTodo from './pages/NewTodo';\nimport NotFound from './pages/NotFound';\nimport Layout from './components/layout/Layout';\nimport Descriptions from './components/descriptions/Descriptions';\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path='/' element={<Navigate replace to='/todo' />} />\n        <Route path='/todo' element={<AllTodos />} />\n        <Route path='/todo/:todoId' element={<TodoDetail />}>\n          <Route\n            path=''\n            element={\n              <div className='centered'>\n                <Link className='btn--flat' to={`description`}>\n                  Załaduj opisy\n                </Link>\n              </div>\n            }\n          />\n          <Route path={`description`} element={<Descriptions />} />\n        </Route>\n        <Route path='/new-todo' element={<NewTodo />} />\n        <Route path='*' element={<NotFound />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}